@page
@model RazorPagesMovie.Pages.Movies.IndexModel

@{
    ViewData["Title"] = "Movies";
}

<h1>Movies</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form>
    <p>
        <select asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>
        Title: <input type="text" asp-for="SearchString" value="@Model.CurrentFilter"/>
        <input type="submit" value="Filter" class="btn btn-primary" />
        <a asp-page="./Index">Back to full List</a>
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-CurrentSort="@Model.TitleSort"
                    asp-route-CurrentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Movie[0].Title)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-CurrentSort="@Model.DateSort"
                    asp-route-CurrentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Movie[0].ReleaseDate)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Rating)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Studio)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movie) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Studio.Name)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-page="./Rate" asp-route-id="@item.ID">Rate</a> |
                <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.Movie.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Movie.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-CurrentSort="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Movie.PageIndex - 1)"
   asp-route-CurrentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-CurrentSort="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Movie.PageIndex + 1)"
   asp-route-CurrentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>